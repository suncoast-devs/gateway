section.section
  .container
    .level
      .level-left
        h1.title = title "#{@cohort.display_name} Enrollment"
      .level-right
        .level-item
          .buttons
            = link_to "Edit", [:edit, @cohort], class: 'button'

    nav.level
      .level-item.has-text-centered
        div
          p.heading Applicants
          p.title
            span.has-text-info = @cohort.program_enrollments.kept.applied.count + @cohort.program_enrollments.kept.interviewing.count + @cohort.program_enrollments.kept.enrolling.count + + @cohort.program_enrollments.kept.enrolled.count + @cohort.program_enrollments.kept.graduated.count
            span = " + "
            span.has-text-danger = @cohort.program_enrollments.kept.canceled.count + @cohort.program_enrollments.kept.rejected.count + @cohort.program_enrollments.kept.dropped.count + @cohort.program_enrollments.kept.incomplete.count
            span = " = "
            = @cohort.program_enrollments.kept.count

      .level-item.has-text-centered
        div
          p.heading Applied/Interviewing
          p.title
            span.has-text-warning = @cohort.program_enrollments.kept.applied.count
            span = " + "
            span.has-text-info = @cohort.program_enrollments.kept.interviewing.count
            span = " = "
            = @cohort.program_enrollments.kept.interviewing.count + @cohort.program_enrollments.kept.applied.count

      .level-item.has-text-centered
        div
          p.heading Accepted
          p.title.has-text-primary = @cohort.program_enrollments.kept.accepted.count
      
      .level-item.has-text-centered
        div
          p.heading Enrolled
          p.title
            span.has-text-success.lighten = @cohort.program_enrollments.kept.enrolling.count
            span = " + "
            span.has-text-success = @cohort.program_enrollments.kept.enrolled.count + @cohort.program_enrollments.kept.graduated.count
            span = " = "
            = @cohort.program_enrollments.kept.enrolling.count + @cohort.program_enrollments.kept.enrolled.count

    table.table.is-bordered.is-striped.is-fullwidth
      thead
        tr
          th Name
          th Stage
          th SEA
          th Deposit
          th Financial Clearance
          th.has-text-centered
            span.icon
              i.fas.fa-money-bill-transfer

          th.has-text-centered
            span.icon title="Last Contacted"
              i.fas.fa-stopwatch
      tbody
        - @cohort.program_enrollments.kept.eager_load(person: :last_contact_disposition).order(Arel.sql("stage=2, stage=3, stage=4, stage=5, stage=7, stage=6, stage=10, stage=0, stage=8, stage=11")).each do |enrollment|
          tr
            td = link_to enrollment.person.full_name, enrollment.person
            td
              .tags
                span[class="tag #{intent_for_stage(enrollment.stage)}"] = enrollment.stage.titleize
            td
              - if enrollment.enrollment_agreement_complete?
                .fas.fa-check-circle.has-text-success
              - else
                .fas.fa-exclamation-circle.has-text-warning
            td
              - if enrollment.deposit_required?
                - if enrollment.deposit_paid
                  .fas.fa-check-circle.has-text-success
                - else
                  .fas.fa-exclamation-circle.has-text-warning
              - else
                .fas.fa-ban.has-text-grey
            td
              - unless enrollment.financial_clearance.blank?
                .is-pulled-left
                  .fas.fa-check-circle.has-text-success
                .is-pulled-right
                  .tag= enrollment.financial_clearance
              - else
                .fas.fa-exclamation-circle.has-text-warning
            td.has-text-centered
              - if enrollment.enrolled?
                = link_to usd_accounting(enrollment.person.ledger_balance), [enrollment.person, :ledger_entries]

            td.has-text-centered
              - if enrollment.person.last_contact_disposition.present?
                span class=[enrollment.person.last_contact_disposition.succeeded? ? "has-text-success-dark" : "has-text-warning-dark"]
                  = time_tag(enrollment.person.last_contact_disposition.contacted_at) { time_ago_in_words(enrollment.person.last_contact_disposition.contacted_at) + ' ago' }
              - else
                span.has-text-danger-dark Never